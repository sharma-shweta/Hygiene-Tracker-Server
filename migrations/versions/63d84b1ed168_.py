"""empty message

Revision ID: 63d84b1ed168
Revises: 097d4361a025
Create Date: 2016-07-03 17:00:32.886237

"""

# revision identifiers, used by Alembic.
revision = '63d84b1ed168'
down_revision = '097d4361a025'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clientclasstypes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('village', sa.String(), nullable=True),
    sa.Column('panchayat', sa.String(), nullable=True),
    sa.Column('block', sa.String(), nullable=True),
    sa.Column('ward', sa.String(), nullable=True),
    sa.Column('taluk', sa.String(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('guardian', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('houseNo', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('createDate', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('housetypes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('occupations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('contactNo', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('createDate', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surveyq_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('surveytypes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clientId', sa.Integer(), nullable=False),
    sa.Column('maleAdults', sa.Integer(), nullable=True),
    sa.Column('femaleAdults', sa.Integer(), nullable=True),
    sa.Column('maleChildren', sa.Integer(), nullable=True),
    sa.Column('femaleChildren', sa.Integer(), nullable=True),
    sa.Column('totSchoolGoing', sa.Integer(), nullable=True),
    sa.Column('occupationId', sa.Integer(), nullable=False),
    sa.Column('houseTypeId', sa.Integer(), nullable=False),
    sa.Column('surveyTypeId', sa.Integer(), nullable=True),
    sa.Column('createDate', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['clientId'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['houseTypeId'], ['housetypes.id'], ),
    sa.ForeignKeyConstraint(['occupationId'], ['occupations.id'], ),
    sa.ForeignKeyConstraint(['surveyTypeId'], ['surveytypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clientclasses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clientId', sa.Integer(), nullable=False),
    sa.Column('classTypeId', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('createDate', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['classTypeId'], ['clientclasstypes.id'], ),
    sa.ForeignKeyConstraint(['clientId'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surveyqs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('surveyQuestion', sa.String(), nullable=True),
    sa.Column('categoryId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['categoryId'], ['surveyq_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('telNo1', sa.String(), nullable=True),
    sa.Column('telNo2', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('faxNo', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.Column('orgId', sa.Integer(), nullable=False),
    sa.Column('createDate', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['orgId'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['roleId'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('clientresponsesummary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clientId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('clientClassTypeId', sa.Integer(), nullable=True),
    sa.Column('remarks', sa.String(), nullable=True),
    sa.Column('createDate', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['clientClassTypeId'], ['clientclasstypes.id'], ),
    sa.ForeignKeyConstraint(['clientId'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('surveyans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('questionId', sa.Integer(), nullable=False),
    sa.Column('photoReq', sa.Boolean(), nullable=True),
    sa.Column('vidReq', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['questionId'], ['surveyqs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clientresponses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clientId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('questionId', sa.Integer(), nullable=False),
    sa.Column('answerId', sa.Integer(), nullable=True),
    sa.Column('answerDesc', sa.String(), nullable=True),
    sa.Column('createDate', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['answerId'], ['surveyans.id'], ),
    sa.ForeignKeyConstraint(['clientId'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['questionId'], ['surveyqs.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('results')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('results',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('result_all', postgresql.JSON(), autoincrement=False, nullable=True),
    sa.Column('result_no_stop_words', postgresql.JSON(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='results_pkey')
    )
    op.drop_table('clientresponses')
    op.drop_table('surveyans')
    op.drop_table('clientresponsesummary')
    op.drop_table('users')
    op.drop_table('surveyqs')
    op.drop_table('clientclasses')
    op.drop_table('client_details')
    op.drop_table('surveytypes')
    op.drop_table('surveyq_categories')
    op.drop_table('roles')
    op.drop_table('organizations')
    op.drop_table('occupations')
    op.drop_table('housetypes')
    op.drop_table('clients')
    op.drop_table('clientclasstypes')
    ### end Alembic commands ###
